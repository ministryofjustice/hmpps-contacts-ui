{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}

{% macro contactAddressCard(opts) %}

  {% set address = opts.address %}
  {% set showActions = opts.showActions %}
  {% set updateAddressBaseLink = opts.updateAddressBaseLink %}
  {% set journeyIdSuffix = ('/' + opts.journeyId) if opts.journeyId else '' %}
  {% set deleteAddressLink = opts.deleteAddressLink %}
  {% set enumeratedPhones = opts.enumeratedPhones %}
  {% set editPhoneWithCreateLink = opts.editPhoneWithCreateLink %}

  {% set isActiveAddress = not address.endDate or not (address.endDate | isDateAndInThePast) %}

  {% set rows = [
    {
      key: { text: 'Type' },
      value: { text: address.addressTypeDescription if address.addressTypeDescription else 'Not provided' },
      actions: {
        items: [
          {
            href: updateAddressBaseLink + '/select-type' + journeyIdSuffix,
            text: "Change",
            visuallyHiddenText: "the address type",
            attributes: { 'data-qa': 'change-address-type-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions and isActiveAddress else []
      }
    },
    {
      key: { text: 'Address' },
      value: { html: ('No fixed address<br/>' if address.noFixedAddress ) + address | addressToLines | escape | nl2br },
      actions: {
      items: [
          {
            href: updateAddressBaseLink + '/enter-address' + journeyIdSuffix,
            text: "Change",
            visuallyHiddenText: "the address",
            attributes: { 'data-qa': 'change-address-lines-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions and isActiveAddress else []
      }
    },
    {
      key: { text: 'Dates' },
      value: { text: address | formatDateRange or 'Not provided' },
      actions: {
        items: [
          {
            href: updateAddressBaseLink + '/dates' + journeyIdSuffix,
            text: "Change",
            visuallyHiddenText: "the dates for the prisonerâ€™s use of the address",
            attributes: { 'data-qa': 'change-address-dates-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions else []
      }
    },
    {
      key: { text: 'Primary or postal address' },
      value: { text: address | formatPrimaryOrPostal },
      actions: {
        items: [
          {
            href: updateAddressBaseLink + '/primary-or-postal' + journeyIdSuffix,
            text: "Change",
            visuallyHiddenText: "if this address is set as the primary or postal address for the contact",
            attributes: { 'data-qa': 'change-address-primary-postal-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions and isActiveAddress else []
      }
    }
  ] %}

  {% if address.phoneNumbers and address.phoneNumbers.length > 0 %}
    {% set rows = rows.concat([{
      key: {
        text: 'Address phone numbers'
      },
      value: {
        classes: 'govuk-!-display-none'
      },
      actions: {
        items: [
          {
            href: updateAddressBaseLink + '/phone/create' + journeyIdSuffix,
            text: "Add address phone number",
            attributes: { 'data-qa': 'add-address-phone-link-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions and isActiveAddress else [],
        classes: 'govuk-!-text-align-left govuk-!-width-two-thirds'
      },
      classes: 'govuk-summary-list__row--no-border'
    }]) %}
    {% for val in address.phoneNumbers | sort(attribute = 'phoneNumber') | sort(attribute = 'phoneTypeDescription') %}
      {% set contactAddressPhoneId = loop.index if enumeratedPhones else val.contactAddressPhoneId %}
      {% set rows = rows.concat([{
        key: {
          text: val.phoneTypeDescription,
          classes: 'govuk-!-font-weight-regular'
        },
        value: {
          text: val | formatPhoneNumber
        },
        actions: {
          items: [
            {
              href: (updateAddressBaseLink + '/phone/create' + journeyIdSuffix + '#phones[' + loop.index0 + '].phoneNumber') if editPhoneWithCreateLink else (updateAddressBaseLink + '/phone/' + contactAddressPhoneId + '/edit' + journeyIdSuffix),
              text: "Change",
              visuallyHiddenText: 'the information about the ' + val.phoneTypeDescription + ' phone number for this address',
              attributes: { 'data-qa': 'change-address-phone-' + val.contactAddressPhoneId },
              classes: 'govuk-link--no-visited-state'
            },
            {
              href: updateAddressBaseLink + '/phone/' + contactAddressPhoneId + '/delete' + journeyIdSuffix,
              text: "Delete",
              visuallyHiddenText: 'the information about the ' + val.phoneTypeDescription + ' phone number for this address',
              attributes: { 'data-qa': 'delete-address-phone-' + val.contactAddressPhoneId },
              classes: 'govuk-link--no-visited-state'
            }
          ] if showActions and isActiveAddress else []
        },
        classes: ('govuk-summary-list__row--no-border') if not loop.last
      }]) %}
    {% endfor %}
  {% else %}
    {% set rows = rows.concat([{
      key: {
        text: 'Address phone numbers'
      },
      value: {
        text: 'Not provided'
      },
      actions: {
        items: [
          {
            href: updateAddressBaseLink + '/phone/create' + journeyIdSuffix,
            text: "Change",
            visuallyHiddenText: 'the information about the phone number for this address',
            attributes: { 'data-qa': 'add-address-phone-link-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if showActions and isActiveAddress else []
      }
    }]) %}
  {% endif %}

  {% set rows = rows.concat([{
    key: {
      text: 'Comments on this address'
    },
    value: {
      html: (address.comments or 'Not provided') | escape | nl2br
    },
    actions: {
      items: [
        {
          href: updateAddressBaseLink + '/comments' + journeyIdSuffix,
          text: "Change",
          visuallyHiddenText: "the comments on this address",
          attributes: { 'data-qa': 'change-address-comments-' + address.contactAddressId },
          classes: 'govuk-link--no-visited-state'
        }
      ] if showActions and isActiveAddress else []
    }
  }]) %}
  {{ govukSummaryList({
    card: {
      title: {
        text: (address | formatTitleForAddress) or "Address"
      },
      actions: {
        items: [
          {
            href: deleteAddressLink + journeyIdSuffix,
            text: "Delete address",
            attributes: { 'data-qa': 'delete-address-link-' + address.contactAddressId },
            classes: 'govuk-link--no-visited-state'
          }
        ] if deleteAddressLink else []
      }
    },
    rows: rows
  }) }}
{% endmacro %}
