{% extends "partials/layout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "partials/miniProfile/macro.njk" import miniProfile %}

{% set title = "Check your answers before linking the contact to " + prisonerDetails | formatNameFirstNameFirst(excludeMiddleNames = true) %}
{% set pageTitle = "Check your answers before linking the contact to the prisoner - Contacts - DPS" %}
{% set mainClasses = "app-container govuk-body" %}

{% block content %}
{% include 'partials/navigation.njk' %}
{{ miniProfile(prisonerDetails) }}
{% include 'partials/formErrorSummary.njk' %}
 <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
          <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
              <span class="govuk-caption-l">{{ caption or 'Contacts' }}</span>
              <h1 class="govuk-heading-l" data-qa="main-heading">{{ title }}</h1>
            </div>
          </div>
          <p class="govuk-!-margin-bottom-7">
            <strong>Prisoner:</strong>&nbsp;<span>{{ prisonerDetails | formatNameFirstNameFirst(excludeMiddleNames = true) }} ({{ prisonerDetails.prisonerNumber }})</span>
            <br/>
            <strong>Contact:</strong>&nbsp;<span>{{ journey.names | formatNameFirstNameFirst }} ({{ journey.contactId }})</span>
          </p>

          {% set baseChangeUrl = "/prisoner/" + journey.prisonerNumber + "/contacts/create" %}
          {{ govukSummaryList({
              rows: [
                {
                  key: {
                  text: "Relationship type"
                },
                  value: {
                  html: relationshipTypeDescription,
                  classes: 'check-answers-relationship-type-value'
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/select-relationship-type/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "relationship type",
                      attributes: {"data-qa": "change-relationship-type-link"},
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                },
                {
                  key: {
                  text: "Relationship to prisoner"
                },
                  value: {
                  html: relationshipToPrisonerDescription,
                  classes: 'check-answers-relationship-to-prisoner-value'
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/select-relationship-to-prisoner/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "the relationship to the prisoner",
                      attributes: {"data-qa": "change-relationship-to-prisoner-link"},
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                },
                {
                  key: {
                  text: "Emergency contact"
                },
                  value: {
                  text: "Not provided" if journey.relationship.isEmergencyContact == undefined else (journey.relationship.isEmergencyContact | formatYesNo),
                  classes: 'check-answers-emergency-contact-value'
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/emergency-contact-or-next-of-kin/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "if the contact is the prisoner’s emergency contact",
                      attributes: {"data-qa": "change-emergency-contact-link"},
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                },
                {
                  key: {
                  text: "Next of kin"
                },
                  value: {
                  text: "Not provided" if journey.relationship.isNextOfKin == undefined else (journey.relationship.isNextOfKin | formatYesNo),
                  classes: 'check-answers-next-of-kin-value'
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/emergency-contact-or-next-of-kin/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "if the contact is the prisoner’s next of kin",
                      attributes: {"data-qa": "change-next-of-kin-link"},
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                },
                {
                  key: {
                  text: "Approved for visits"
                },
                  value: {
                  html: "Not provided" if journey.relationship.isApprovedVisitor == undefined else (journey.relationship.isApprovedVisitor | formatYesNo)
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/approved-to-visit/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "if the contact is approved to visit the prisoner",
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                },
                {
                  key: {
                  text: "Comments on this relationship"
                },
                  value: {
                  html: (journey.relationship.comments or "Not provided") | escape | nl2br,
                  classes: 'check-answers-comments-value'
                },
                  actions: {
                  items: [
                    {
                      href: baseChangeUrl + "/enter-relationship-comments/"  + journey.id,
                      text: "Change",
                      visuallyHiddenText: "the comments on the relationship",
                      attributes: {"data-qa": "change-comments-link"},
                      classes: "govuk-link--no-visited-state"
                    }
                  ]
                }
                }
              ]
          }) }}
            <form method='POST'>
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {% set buttonLabel = "Confirm and link contact" %}
                <div class="govuk-button-group">
                    {{ govukButton({
                        text: buttonLabel,
                        type: "submit",
                        classes: 'govuk-!-margin-top-6',
                        attributes: {"data-qa": "continue-button"},
                        preventDoubleClick: true
                    }) }}
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-size-19" href="{{ navigation.cancelButton }}" data-qa="cancel-button">Cancel</a>
                </div>
            </form>

        </div>
    </div>

{% endblock %}
