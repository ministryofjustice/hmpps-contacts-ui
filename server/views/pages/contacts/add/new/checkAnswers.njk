{% extends "partials/layout.njk" %}
{% from "govuk/components/button/macro.njk" import govukButton %}
{% from "govuk/components/summary-list/macro.njk" import govukSummaryList %}
{% from "partials/contactMethods/contactAddressCard.njk" import contactAddressCard %}

{% set pageTitle = "Check your answers before linking the contact to the prisoner - Add a contact - DPS" %}
{% set title = "Check your answers before linking the contact to " + prisonerDetails | formatNameFirstNameFirst(excludeMiddleNames = true) %}
{% set mainClasses = "app-container govuk-body" %}

{% block content %}
 <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <span class="govuk-caption-l">{{ journey | captionForAddContactJourney }}</span>
            <h1 class="govuk-heading-l" data-qa="main-heading">{{ title }}</h1>
            <form method='POST'>
                <input type="hidden" name="_csrf" value="{{ csrfToken }}" />
                {% set baseChangeUrl = "/prisoner/" + journey.prisonerNumber + "/contacts/create" %}
                {% set  formattedDateOfBirth %}{% if journey.dateOfBirth.isKnown === 'YES' %}{{ dateOfBirth | formatDate }}{% else %}Not provided{% endif %}{% endset %}
                {% set contactDetailsRows = [
                  {
                     key: {
                       text: "Title"
                     },
                     value: {
                       text: titleDescription or 'Not provided',
                       classes: 'check-answers-title-value'
                     },
                     actions: {
                       items: [
                         {
                            href: baseChangeUrl + "/enter-name/"  + journey.id + "#title",
                            text: "Change",
                            visuallyHiddenText: "the contact’s title",
                            attributes: {"data-qa": "change-title-link"},
                            classes: "govuk-link--no-visited-state"
                         }
                       ]
                      }
                    },
                    {
                        key: {
                            text: "Name"
                        },
                        value: {
                            text: journey.names | formatNameFirstNameFirst,
                            classes: 'check-answers-name-value'
                        },
                        actions: {
                            items: [
                                {
                                    href: baseChangeUrl + "/enter-name/"  + journey.id + "#firstName",
                                    text: "Change",
                                    visuallyHiddenText: "the contact’s name",
                                    attributes: {"data-qa": "change-name-link"},
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        }
                    },
                    {
                        key: {
                            text: "Date of birth"
                        },
                        value: {
                            text: formattedDateOfBirth,
                            classes: 'check-answers-dob-value'
                        },
                        actions: {
                            items: [
                                {
                                    href: baseChangeUrl + "/enter-dob/"  + journey.id,
                                    text: "Change",
                                    visuallyHiddenText: "the contact’s date of birth",
                                    attributes: {"data-qa": "change-dob-link"},
                                    classes: "govuk-link--no-visited-state"
                                }
                            ]
                        }
                    },
                    {
                      key: {
                        text: "Gender"
                      },
                      value: {
                        text: genderDescription or 'Not provided',
                        classes: 'check-answers-gender-value'
                      },
                      actions: {
                        items: [
                          {
                            href: baseChangeUrl + "/enter-gender/"  + journey.id,
                            text: "Change",
                            visuallyHiddenText: "the contact’s gender",
                            attributes: {"data-qa": "change-gender-link"},
                            classes: "govuk-link--no-visited-state"
                          }
                        ]
                      }
                    },
                    {
                      key: {
                        text: "Staff member"
                      },
                      value: {
                        text: "Not provided" if not journey.isStaff else (journey.isStaff | formatYesNo),
                        classes: 'check-answers-is-staff-value'
                      },
                      actions: {
                        items: [
                          {
                            href: baseChangeUrl + "/is-staff/"  + journey.id,
                            text: "Change",
                            visuallyHiddenText: "if the contact is a member of staff",
                            attributes: {"data-qa": "change-is-staff-link"},
                            classes: "govuk-link--no-visited-state"
                          }
                        ]
                      }
                    }
                ] %}

                <h2 class="govuk-heading-l govuk-!-font-size-24">Personal information</h2>
                {{ govukSummaryList({ rows: contactDetailsRows }) }}
                <h2 class="govuk-heading-l govuk-!-font-size-24">Relationship to prisoner {{ prisonerDetails | formatNameFirstNameFirst(excludeMiddleNames = true) }}</h2>
                {{ govukSummaryList({
                    rows: [
                        {
                            key: {
                                text: "Relationship type"
                            },
                            value: {
                                text: relationshipTypeDescription,
                                classes: 'check-answers-relationship-type-value'
                            },
                            actions: {
                                items: [
                                    {
                                        href: baseChangeUrl + "/select-relationship-type/"  + journey.id,
                                        text: "Change",
                                        visuallyHiddenText: "relationship type",
                                        attributes: {"data-qa": "change-relationship-type-link"},
                                        classes: "govuk-link--no-visited-state"
                                    }
                                ]
                            }
                        },
                        {
                            key: {
                                text: "Relationship to prisoner"
                            },
                            value: {
                                text: relationshipToPrisonerDescription,
                                classes: 'check-answers-relationship-to-prisoner-value'
                            },
                            actions: {
                                items: [
                                    {
                                        href: baseChangeUrl + "/select-relationship-to-prisoner/"  + journey.id,
                                        text: "Change",
                                        visuallyHiddenText: "the relationship to the prisoner",
                                        attributes: {"data-qa": "change-relationship-to-prisoner-link"},
                                        classes: "govuk-link--no-visited-state"
                                    }
                                ]
                            }
                        },
                        {
                            key: {
                                text: "Emergency contact"
                            },
                            value: {
                                text: journey.relationship.isEmergencyContact | formatYesNo,
                                classes: 'check-answers-emergency-contact-value'
                            },
                            actions: {
                                items: [
                                    {
                                        href: baseChangeUrl + "/emergency-contact-or-next-of-kin/"  + journey.id,
                                        text: "Change",
                                        visuallyHiddenText: "if the contact is the prisoner’s emergency contact",
                                        attributes: {"data-qa": "change-emergency-contact-link"},
                                        classes: "govuk-link--no-visited-state"
                                    }
                                ]
                            }
                        },
                        {
                            key: {
                                text: "Next of kin"
                            },
                            value: {
                                text: journey.relationship.isNextOfKin | formatYesNo,
                                classes: 'check-answers-next-of-kin-value'
                            },
                            actions: {
                            items: [
                                    {
                                        href: baseChangeUrl + "/emergency-contact-or-next-of-kin/"  + journey.id,
                                        text: "Change",
                                        visuallyHiddenText: "if the contact is the prisoner’s next of kin",
                                        attributes: {"data-qa": "change-next-of-kin-link"},
                                        classes: "govuk-link--no-visited-state"
                                    }
                                ]
                            }
                        },
                        {
                          key: {
                          text: "Approved for visits"
                        },
                          value: {
                          html: "Not provided" if journey.relationship.isApprovedVisitor == undefined else (journey.relationship.isApprovedVisitor | formatYesNo)
                        },
                          actions: {
                          items: [
                            {
                              href: baseChangeUrl + "/approved-to-visit/"  + journey.id,
                              text: "Change",
                              visuallyHiddenText: "if the contact is approved to visit the prisoner",
                              classes: "govuk-link--no-visited-state"
                            }
                          ]
                        }
                        },
                        {
                            key: {
                                text: "Comments on this relationship"
                            },
                            value: {
                                html: (journey.relationship.comments or "Not provided") | escape | nl2br,
                                classes: 'check-answers-comments-value'
                            },
                            actions: {
                                items: [
                                    {
                                        href: baseChangeUrl + "/enter-relationship-comments/"  + journey.id,
                                        text: "Change",
                                        visuallyHiddenText: "the comments on the relationship",
                                        attributes: {"data-qa": "change-comments-link"},
                                        classes: "govuk-link--no-visited-state"
                                    }
                                ]
                            }
                        }
                    ]
                }) }}

              <div class="moj-page-header-actions">
                <div class="moj-page-header-actions__title">
                  <h2 class="govuk-heading-l govuk-!-font-size-24">Phone numbers</h2>
                </div>
                <div class="moj-page-header-actions__actions">
                  <div class="moj-button-group moj-button-group--inline">
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold" data-qa="add-address-link" href="{{ baseChangeUrl + "/add-phone-numbers/" + journey.id }}">Add phone number</a>
                  </div>
                </div>
              </div>
              {% set phoneNumberRows = [] %}
              {% for phoneNumber in phoneNumbers %}
                {% set phoneNumberRows = (phoneNumberRows.push(
                  {
                    key: {
                      text: phoneNumber.phoneTypeDescription
                    },
                    value: {
                      text: phoneNumber | formatPhoneNumber
                    },
                    actions: {
                      items: [
                        {
                          href: baseChangeUrl + "/add-phone-numbers/" + journey.id + '#phones[' + loop.index0 + '].phoneNumber',
                          text: "Change",
                          visuallyHiddenText: "the information about this " + phoneNumber.phoneTypeDescription + " phone number",
                          attributes: {"data-qa": "edit-phone-number-" + loop.index0},
                          classes: "govuk-link--no-visited-state"
                        },
                        {
                          href: baseChangeUrl + "/delete-phone-number/" + loop.index0 + "/" + journey.id,
                          text: "Delete",
                          visuallyHiddenText: "the information about this " + phoneNumber.phoneTypeDescription + " phone number",
                          attributes: {"data-qa": "delete-phone-number-" + loop.index0},
                          classes: "govuk-link--no-visited-state"
                        }
                      ]
                    }
                  }
                ), phoneNumberRows) %}
              {% endfor %}
              {% if phoneNumberRows.length > 0 %}
              {{ govukSummaryList({ rows: phoneNumberRows }) }}
              {% else %}
              <p class="govuk-body">No phone numbers provided.</p>
              {% endif %}

              <div class="moj-page-header-actions">
                <div class="moj-page-header-actions__title">
                  <h2 class="govuk-heading-l govuk-!-font-size-24">Email addresses</h2>
                </div>
                <div class="moj-page-header-actions__actions">
                  <div class="moj-button-group moj-button-group--inline">
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold" data-qa="add-emails-link" href="{{ baseChangeUrl + "/emails/" + journey.id }}">Add email address</a>
                  </div>
                </div>
              </div>
              {% set emailAddressesRows = [] %}
              {% for email in emailAddresses %}
                {% set emailAddressesRows = (emailAddressesRows.push(
                  {
                    classes: "govuk-summary-list__row--no-border" if loop.index != emailAddresses.length else null,
                    key: {
                    text: 'Email addresses' if loop.index === 1 else ''
                  },
                    value: {
                    text: email.emailAddress
                  },
                    actions: {
                    items: [
                      {
                        href: baseChangeUrl + "/emails/" + journey.id + '#emails[' + loop.index0 + '].emailAddress',
                        text: "Change",
                        visuallyHiddenText: "this email address",
                        attributes: {"data-qa": "edit-email-" + loop.index0},
                        classes: "govuk-link--no-visited-state"
                      },
                      {
                        href: baseChangeUrl + "/delete-email/" + loop.index + "/" + journey.id,
                        text: "Delete",
                        visuallyHiddenText: "this email address",
                        attributes: {"data-qa": "delete-email-" + loop.index0},
                        classes: "govuk-link--no-visited-state"
                      }
                    ]
                  }
                  }
                ), emailAddressesRows) %}
              {% endfor %}
              {% if emailAddressesRows.length > 0 %}
                {{ govukSummaryList({ rows: emailAddressesRows }) }}
              {% else %}
                <p class="govuk-body">No email addresses provided.</p>
              {% endif %}

              <div class="moj-page-header-actions">
                <div class="moj-page-header-actions__title">
                  <h2 class="govuk-heading-l govuk-!-font-size-24">Addresses</h2>
                </div>
                <div class="moj-page-header-actions__actions">
                  <div class="moj-button-group moj-button-group--inline">
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold" data-qa="add-address-link" href="{{ baseChangeUrl + "/addresses/" + journey.id }}">
                      {% if addresses.length %}
                        Add, change or delete addresses
                      {% else %}
                        Add address
                      {% endif %}
                    </a>
                  </div>
                </div>
              </div>
              {% if addresses.length > 0 %}
                {% for address in addresses %}
                  {{ contactAddressCard({
                    address: address,
                    showActions: false
                  }) }}
                {% endfor %}
              {% else %}
                <p class="govuk-body">No addresses provided.</p>
              {% endif %}

              {% if journey.relationship.relationshipType === 'O' %}
                <div class="moj-page-header-actions">
                  <div class="moj-page-header-actions__title">
                    <h2 class="govuk-heading-l govuk-!-font-size-24">Employers</h2>
                  </div>
                  <div class="moj-page-header-actions__actions">
                    <div class="moj-button-group moj-button-group--inline">
                      <a class="govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold" data-qa="add-address-link" href="{{ baseChangeUrl + "/employments/" + journey.id }}">
                        {% if journey.employments.length %}
                          Add, change or delete employers
                        {% else %}
                          Add employer
                        {% endif %}
                      </a>
                    </div>
                  </div>
                </div>
                {% if journey.employments.length > 0 %}
                  {% for employment in journey.employments %}
                    {{ govukSummaryList({
                      card: {
                        title: {
                          text: ("Active employer: " if employment.isActive else "Past employer: ") + employment.employer.organisationName
                        }
                      },
                      rows: [
                        {
                          key: {
                            text: "Employer name"
                          },
                          value: {
                            text: employment.employer.organisationName
                          }
                        },
                        {
                          key: {
                            text: "Employer’s primary address"
                          },
                          value: {
                            html: (employment.employer | addressToLines or 'Not provided') | escape | nl2br
                          }
                        },
                        {
                          key: {
                            text: "Business phone number at primary address"
                          },
                          value: {
                            text: employment.employer | formatBusinessPhoneNumber or "Not provided"
                          }
                        },
                        {
                          key: {
                            text: "Employment status"
                          },
                          value: {
                            text: "Active" if employment.isActive else "Inactive"
                          }
                        }
                      ]
                    }) }}
                  {% endfor %}
                {% else %}
                  <p class="govuk-body">No employment information provided.</p>
                {% endif %}
              {% endif %}

              <div class="moj-page-header-actions">
                <div class="moj-page-header-actions__title">
                  <h2 class="govuk-heading-l govuk-!-font-size-24">Identity documentation</h2>
                </div>
                <div class="moj-page-header-actions__actions">
                  <div class="moj-button-group moj-button-group--inline">
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-weight-bold" data-qa="add-identities-link" href="{{ baseChangeUrl + "/identities/" + journey.id }}">Add identity document</a>
                  </div>
                </div>
              </div>
              {% set identityRows = [] %}
              {% for identity in identities %}
                {% set identityRows = (identityRows.push(
                  {
                    key: {
                    text: identity.identityTypeDescription
                  },
                    value: {
                    html: identity.identityValue | escape + ( ('<br/>Issued by ' + identity.issuingAuthority) if identity.issuingAuthority )
                  },
                    actions: {
                    items: [
                      {
                        href: baseChangeUrl + "/identities/" + journey.id + '#identities[' + loop.index0 + '].identityValue',
                        text: "Change",
                        visuallyHiddenText: "the information about this " + identity.identityTypeDescription,
                        attributes: {"data-qa": "edit-identity-" + loop.index0},
                        classes: "govuk-link--no-visited-state"
                      },
                      {
                        href: baseChangeUrl + "/delete-identity/" + loop.index + "/" + journey.id,
                        text: "Delete",
                        visuallyHiddenText: "the information about this " + identity.identityTypeDescription,
                        attributes: {"data-qa": "delete-identity-" + loop.index0},
                        classes: "govuk-link--no-visited-state"
                      }
                    ]
                  }
                  }
                ), identityRows) %}
              {% endfor %}
              {% if identityRows.length > 0 %}
                {{ govukSummaryList({ rows: identityRows }) }}
              {% else %}
                <p class="govuk-body">No identity documents provided.</p>
              {% endif %}

              <h2 class="govuk-heading-l govuk-!-font-size-24">Additional information</h2>
              {{ govukSummaryList({ rows: [
                {
                  key: {
                    text: "Contact’s first language"
                  },
                  value: {
                    text: languageDescription or 'Not provided',
                    classes: 'check-answers-language-value'
                  },
                  actions: {
                    items: [
                      {
                        href: baseChangeUrl + "/language-and-interpreter/"  + journey.id + "#language",
                        text: "Change",
                        visuallyHiddenText: "the contact’s first language",
                        attributes: {"data-qa": "change-language-link"},
                        classes: "govuk-link--no-visited-state"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Interpreter required"
                  },
                  value: {
                    text: (journey.languageAndInterpreter.interpreterRequired | formatYesNo if journey.languageAndInterpreter and journey.languageAndInterpreter.interpreterRequired) or 'Not provided',
                    classes: 'check-answers-interpreter-value'
                  },
                  actions: {
                    items: [
                      {
                        href: baseChangeUrl + "/language-and-interpreter/"  + journey.id + "#interpreterRequired",
                        text: "Change",
                        visuallyHiddenText: "if an interpreter is required",
                        attributes: {"data-qa": "change-interpreter-link"},
                        classes: "govuk-link--no-visited-state"
                      }
                    ]
                  }
                },
                {
                  key: {
                    text: "Contact’s domestic status"
                  },
                  value: {
                    text: domesticStatusDescription or 'Not provided',
                    classes: 'check-answers-domestic-status-value'
                  },
                  actions: {
                    items: [
                      {
                        href: baseChangeUrl + "/domestic-status/"  + journey.id,
                        text: "Change",
                        visuallyHiddenText: "the contact’s domestic status",
                        attributes: {"data-qa": "change-domestic-status-link"},
                        classes: "govuk-link--no-visited-state"
                      }
                    ]
                  }
                }
              ] }) }}
                <div class="govuk-button-group">
                    {{ govukButton({
                        text: "Confirm and link contact",
                        type: "submit",
                        classes: 'govuk-!-margin-top-6',
                        attributes: {"data-qa": "continue-button"},
                        preventDoubleClick: true
                    }) }}
                    <a class="govuk-link govuk-link--no-visited-state govuk-!-font-size-19" href="{{ navigation.cancelButton }}" data-qa="cancel-button">Cancel</a>
                </div>
            </form>

        </div>
    </div>

{% endblock %}
