/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/organisation': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Create new organisation
     * @description Creates a new organisation
     */
    post: operations['createOrganisation']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/migrate/organisation': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    get?: never
    put?: never
    /**
     * Migrate an organisation
     * @description Migrate an organisation from NOMIS with all of its associated data. If an organisation with the same id id already exists it will be replaced
     */
    post: operations['migrateOrganisation']
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/reference-codes/group/{groupCode}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Return the reference data available for group key.
     * @description Endpoint to return reference data for a provided group key. Sorted by display order then description by default.
     */
    get: operations['getReferenceDataByGroup']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/organisation/{organisationId}': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Get organisation
     * @description Gets a organisation by their id
     */
    get: operations['getOrganisationById']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
  '/organisation/search': {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    /**
     * Search organisations
     * @description Search all organisations by their name
     */
    get: operations['searchOrganisations']
    put?: never
    post?: never
    delete?: never
    options?: never
    head?: never
    patch?: never
    trace?: never
  }
}
export type webhooks = Record<string, never>
export interface components {
  schemas: {
    /** @description Request to create an new organisation */
    CreateOrganisationRequest: {
      /**
       * @description The name of the organisation
       * @example Example Limited
       */
      organisationName: string
      /**
       * @description The programme number for the organisation, stored as FEI_NUMBER in NOMIS
       * @example 1
       */
      programmeNumber?: string
      /**
       * @description The VAT number for the organisation, if known
       * @example 123456
       */
      vatNumber?: string
      /**
       * @description The id of the caseload for this organisation, this is an agency id in NOMIS
       * @example BXI
       */
      caseloadId?: string
      /**
       * @description Any comments on the organisation
       * @example Some additional info
       */
      comments?: string
      /**
       * @description Whether the organisation is active or not
       * @example true
       */
      active: boolean
      /**
       * Format: date
       * @description The date the organisation was deactivated, EXPIRY_DATE in NOMIS
       * @example 2010-12-30
       */
      deactivatedDate?: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    /** @description An address related to an organisation with descriptions of all reference data */
    OrganisationAddressDetails: {
      /**
       * Format: int64
       * @description The id of the organisation address
       * @example 123456
       */
      organisationAddressId: number
      /**
       * Format: int64
       * @description The id of the organisation
       * @example 123456
       */
      organisationId: number
      /**
       * @description
       *           The type of address (optional).
       *           This is a coded value (from the group code ADDRESS_TYPE in reference data).
       *           The known values are HOME, WORK or BUS (business address).
       *
       * @example HOME
       */
      addressType?: string
      /**
       * @description The description of the address type
       * @example HOME
       */
      addressTypeDescription?: string
      /**
       * @description True if this is the primary address otherwise false
       * @example true
       */
      primaryAddress: boolean
      /**
       * @description Flat number or name
       * @example Flat 2B
       */
      flat?: string
      /**
       * @description Building or house number or name
       * @example Mansion House
       */
      property?: string
      /**
       * @description Street or road name
       * @example Acacia Avenue
       */
      street?: string
      /**
       * @description Area
       * @example Morton Heights
       */
      area?: string
      /**
       * @description City code
       * @example 25343
       */
      cityCode?: string
      /**
       * @description The description of city code
       * @example Sheffield
       */
      cityDescription?: string
      /**
       * @description County code
       * @example S.YORKSHIRE
       */
      countyCode?: string
      /**
       * @description The description of county code
       * @example South Yorkshire
       */
      countyDescription?: string
      /**
       * @description Postcode
       * @example S13 4FH
       */
      postcode?: string
      /**
       * @description Country code
       * @example ENG
       */
      countryCode?: string
      /**
       * @description The description of country code
       * @example England
       */
      countryDescription?: string
      /**
       * @description Flag to indicate whether mail is allowed to be sent to this address
       * @example false
       */
      mailAddress: boolean
      /**
       * @description Flag to indicate whether the organisations service is provided at this address
       * @example false
       */
      serviceAddress: boolean
      /**
       * Format: date
       * @description The start date when this address is to be considered active from
       * @example 2024-01-01
       */
      startDate?: string
      /**
       * Format: date
       * @description The end date when this address is to be considered no longer active
       * @example 2024-01-01
       */
      endDate?: string
      /**
       * @description Flag to indicate whether this address indicates no fixed address
       * @example false
       */
      noFixedAddress: boolean
      /**
       * @description Any additional information or comments about the address
       * @example Some additional information
       */
      comments?: string
      /**
       * @description Special needs code for this address from reference data ORG_ADDRESS_SPECIAL_NEEDS.
       * @example DEAF
       */
      specialNeedsCode?: string
      /**
       * @description The description of the special needs code
       * @example Hearing Impaired Translation
       */
      specialNeedsCodeDescription?: string
      /**
       * @description The name of the contact person at this address
       * @example Joe Bloggs
       */
      contactPersonName?: string
      /**
       * @description The business hours of the address
       * @example 9-5
       */
      businessHours?: string
      /** @description Phone numbers associated with this address */
      phoneNumbers: components['schemas']['OrganisationAddressPhoneDetails'][]
      /**
       * @description The id of the user who created the entry
       * @example JD000001
       */
      createdBy: string
      /**
       * Format: date-time
       * @description The timestamp of when the entry was created
       * @example 2024-01-01T00:00:00Z
       */
      createdTime: string
      /**
       * @description The id of the user who last updated the entry
       * @example JD000001
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description The timestamp of when the entry was last updated
       * @example 2024-01-01T00:00:00Z
       */
      updatedTime?: string
    }
    /** @description An address-specific phone number for an organisation */
    OrganisationAddressPhoneDetails: {
      /**
       * Format: int64
       * @description Unique identifier for the address-specific phone number
       * @example 1
       */
      organisationAddressPhoneId: number
      /**
       * Format: int64
       * @description Unique identifier for the phone number
       * @example 1
       */
      organisationPhoneId: number
      /**
       * Format: int64
       * @description Unique identifier for the linked address
       * @example 1
       */
      organisationAddressId: number
      /**
       * Format: int64
       * @description Unique identifier for the organisation
       * @example 123
       */
      organisationId: number
      /**
       * @description Type of phone code
       * @example MOB
       */
      phoneType: string
      /**
       * @description Type of phone description
       * @example Mobile phone
       */
      phoneTypeDescription: string
      /**
       * @description Phone number
       * @example +1234567890
       */
      phoneNumber: string
      /**
       * @description Extension number
       * @example 123
       */
      extNumber?: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    /** @description Complete organisation data with reference data descriptions */
    OrganisationDetails: {
      /**
       * Format: int64
       * @description Unique identifier of the Organisation
       * @example 1
       */
      organisationId: number
      /**
       * @description The name of the organisation
       * @example Example Limited
       */
      organisationName: string
      /**
       * @description The programme number for the organisation, stored as FEI_NUMBER in NOMIS
       * @example 1
       */
      programmeNumber?: string
      /**
       * @description The VAT number for the organisation, if known
       * @example 123456
       */
      vatNumber?: string
      /**
       * @description The id of the caseload for this organisation, this is an agency id in NOMIS
       * @example BXI
       */
      caseloadId?: string
      /**
       * @description Any comments on the organisation
       * @example Some additional info
       */
      comments?: string
      /**
       * @description Whether the organisation is active or not
       * @example true
       */
      active: boolean
      /**
       * Format: date
       * @description The date the organisation was deactivated, EXPIRY_DATE in NOMIS
       */
      deactivatedDate?: string
      /** @description All organisation types associated with an organisation */
      organisationTypes: components['schemas']['OrganisationTypeDetails'][]
      /** @description All phone numbers associated with an organisation directly and not one of their addresses */
      phoneNumbers: components['schemas']['OrganisationPhoneDetails'][]
      /** @description All email addresses associated with an organisation */
      emailAddresses: components['schemas']['OrganisationEmailDetails'][]
      /** @description All web addresses associated with an organisation */
      webAddresses: components['schemas']['OrganisationWebAddressDetails'][]
      /** @description All addresses associated with an organisation */
      addresses: components['schemas']['OrganisationAddressDetails'][]
      /** @description User who created the entry */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       */
      createdTime: string
      /** @description User who updated the entry */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       */
      updatedTime?: string
    }
    /** @description Email related to an organisation */
    OrganisationEmailDetails: {
      /**
       * Format: int64
       * @description Unique identifier for the organisation email
       * @example 1
       */
      organisationEmailId: number
      /**
       * Format: int64
       * @description Unique identifier for the organisation
       * @example 123
       */
      organisationId: number
      /**
       * @description Email address
       * @example test@example.com
       */
      emailAddress: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    /** @description A phone number related to an organisation with descriptions of all reference data */
    OrganisationPhoneDetails: {
      /**
       * Format: int64
       * @description Unique identifier for the organisation phone
       * @example 1
       */
      organisationPhoneId: number
      /**
       * Format: int64
       * @description Unique identifier for the organisation
       * @example 123
       */
      organisationId: number
      /**
       * @description Type of phone
       * @example MOB
       */
      phoneType: string
      /**
       * @description Description of the type of phone
       * @example Mobile
       */
      phoneTypeDescription: string
      /**
       * @description Phone number
       * @example +1234567890
       */
      phoneNumber: string
      /**
       * @description Extension number
       * @example 123
       */
      extNumber?: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    /** @description A type categorizing the organisations */
    OrganisationTypeDetails: {
      /**
       * Format: int64
       * @description Unique identifier for the organisation
       * @example 123
       */
      organisationId: number
      /**
       * @description Type of organisation
       * @example TRUST
       */
      organisationType: string
      /**
       * @description Description of the type of organisation
       * @example Trust
       */
      organisationTypeDescription: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    /** @description Web address related to an organisation */
    OrganisationWebAddressDetails: {
      /**
       * Format: int64
       * @description Unique identifier for the organisation web address
       * @example 1
       */
      organisationWebAddressId: number
      /**
       * Format: int64
       * @description Unique identifier for the organisation
       * @example 123
       */
      organisationId: number
      /**
       * @description Web address
       * @example www.example.com
       */
      webAddress: string
      /**
       * @description User who created the entry
       * @example admin
       */
      createdBy: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was created
       * @example 2023-09-23T10:15:30
       */
      createdTime: string
      /**
       * @description User who updated the entry
       * @example admin2
       */
      updatedBy?: string
      /**
       * Format: date-time
       * @description Timestamp when the entry was updated
       * @example 2023-09-24T12:00:00
       */
      updatedTime?: string
    }
    ErrorResponse: {
      /** Format: int32 */
      status: number
      errorCode?: string
      userMessage?: string
      developerMessage?: string
      moreInfo?: string
    }
    MigrateOrganisationAddress: {
      /**
       * Format: int64
       * @description Unique address ID in NOMIS
       * @example 123
       */
      nomisAddressId: number
      /** @description Address type from reference data */
      type?: string
      /**
       * @description Flat number or identifier
       * @example 1B
       */
      flat?: string
      /**
       * @description House name or number
       * @example 43
       */
      premise?: string
      /**
       * @description Street or road
       * @example Main Street
       */
      street?: string
      /**
       * @description Locality
       * @example Keighley
       */
      locality?: string
      /**
       * @description Postcode
       * @example BD12 8RD
       */
      postCode?: string
      /** @description City - code from reference data */
      city?: string
      /** @description County - code from reference data */
      county?: string
      /** @description Country - code from reference data */
      country?: string
      /**
       * @description If true this address should be considered as no fixed address
       * @example false
       */
      noFixedAddress: boolean
      /**
       * @description If true this address should be considered as the primary residential address
       * @example true
       */
      primaryAddress: boolean
      /**
       * @description If true this address should be considered for sending mail to
       * @example true
       */
      mailAddress: boolean
      /**
       * @description If this is the service address for the organisation
       * @example true
       */
      serviceAddress: boolean
      /**
       * @description Comments relating to this address
       * @example A comment
       */
      comment?: string
      /**
       * @description Special needs code for this address from SPECIAL_NEEDS in NOMIS.
       * @example DEAF
       */
      specialNeedsCode?: string
      /**
       * @description The name of the contact person at this address
       * @example Joe Bloggs
       */
      contactPersonName?: string
      /**
       * @description The business hours for this address
       * @example 9-5
       */
      businessHours?: string
      /**
       * Format: date
       * @description The date this address should be considered valid from
       * @example 2018-10-01
       */
      startDate?: string
      /**
       * Format: date
       * @description The date this address should be considered valid to
       * @example 2022-04-04
       */
      endDate?: string
      /** @description A list of phone numbers which are linked to this address */
      phoneNumbers: components['schemas']['MigrateOrganisationPhoneNumber'][]
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    MigrateOrganisationEmailAddress: {
      /**
       * Format: int64
       * @description Unique email ID in NOMIS
       * @example 123
       */
      nomisEmailAddressId: number
      /**
       * @description Email address
       * @example test@example.com
       */
      email: string
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    MigrateOrganisationPhoneNumber: {
      /**
       * Format: int64
       * @description Unique phone ID in NOMIS
       * @example 123
       */
      nomisPhoneId: number
      /**
       * @description Telephone number
       * @example 098989 98989893
       */
      number: string
      /**
       * @description Extension number (optional)
       * @example 100
       */
      extension?: string
      /** @description Type of phone number (from reference data) */
      type: string
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    /** @description Request to migrate an organisation/corporate and all of its sub-elements from NOMIS into this service */
    MigrateOrganisationRequest: {
      /**
       * Format: int64
       * @description The corporate ID from NOMIS
       * @example 1233323
       */
      nomisCorporateId: number
      /**
       * @description The name of the organisation
       * @example Example Limited
       */
      organisationName: string
      /**
       * @description The programme number for the organisation, stored as FEI_NUMBER in NOMIS
       * @example 1
       */
      programmeNumber?: string
      /**
       * @description The VAT number for the organisation, if known
       * @example 123456
       */
      vatNumber?: string
      /**
       * @description The id of the caseload for this organisation, this is an agency id in NOMIS
       * @example BXI
       */
      caseloadId?: string
      /**
       * @description Any comments on the organisation
       * @example Some additional info
       */
      comments?: string
      /**
       * @description Whether the organisation is active or not
       * @example true
       */
      active: boolean
      /**
       * Format: date
       * @description The date the organisation was deactivated, EXPIRY_DATE in NOMIS
       * @example 2010-12-30
       */
      deactivatedDate?: string
      /** @description The types of the organisation, CORPORATE_TYPES in NOMIS. */
      organisationTypes: components['schemas']['MigrateOrganisationType'][]
      /** @description Phone numbers associated directly with the organisation and it's addresses */
      phoneNumbers: components['schemas']['MigrateOrganisationPhoneNumber'][]
      /** @description Emails associated with the organisation */
      emailAddresses: components['schemas']['MigrateOrganisationEmailAddress'][]
      /** @description Web addresses associated with the organisation */
      webAddresses: components['schemas']['MigrateOrganisationWebAddress'][]
      /** @description Addresses associated with the organisation */
      addresses: components['schemas']['MigrateOrganisationAddress'][]
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    MigrateOrganisationType: {
      /**
       * @description Type of organisation from reference data
       * @example TRUST
       */
      type: string
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    MigrateOrganisationWebAddress: {
      /**
       * Format: int64
       * @description Unique web address ID in NOMIS
       * @example 123
       */
      nomisWebAddressId: number
      /**
       * @description Email address
       * @example www.example.com
       */
      webAddress: string
      /** Format: date-time */
      createDateTime?: string
      createUsername?: string
      /** Format: date-time */
      modifyDateTime?: string
      modifyUsername?: string
    }
    IdPair: {
      /**
       * @description The category of information returned
       * @example PHONE
       * @enum {string}
       */
      elementType: 'PHONE' | 'EMAIL' | 'ADDRESS' | 'ADDRESS_PHONE' | 'ORGANISATION' | 'WEB_ADDRESS'
      /**
       * Format: int64
       * @description The unique ID for this piece of data provided in the request
       * @example 123435
       */
      nomisId: number
      /**
       * Format: int64
       * @description The unique ID created in the DPS contacts service
       * @example 1234
       */
      dpsId: number
    }
    MigrateOrganisationResponse: {
      /** @description The pair of IDs for this organisation in NOMIS */
      organisation: components['schemas']['IdPair']
      /** @description List of organisation types that were created */
      organisationTypes: string[]
      /** @description List of Nomis and DPS IDs for phone numbers */
      phoneNumbers: components['schemas']['IdPair'][]
      /** @description List of Nomis and DPS IDs for email addresses */
      emailAddresses: components['schemas']['IdPair'][]
      /** @description List of Nomis and DPS IDs for web addresses */
      webAddresses: components['schemas']['IdPair'][]
      /** @description List of Nomis and DPS IDs for addresses */
      addresses: components['schemas']['MigratedOrganisationAddress'][]
    }
    MigratedOrganisationAddress: {
      /** @description The pair of IDs for this organisation address in NOMIS */
      address: components['schemas']['IdPair']
      /** @description List of Nomis and DPS IDs for email addresses */
      phoneNumbers: components['schemas']['IdPair'][]
    }
    /** @enum {string} */
    ReferenceCodeGroup:
      | 'CITY'
      | 'COUNTY'
      | 'COUNTRY'
      | 'ADDRESS_TYPE'
      | 'PHONE_TYPE'
      | 'ORGANISATION_TYPE'
      | 'ORG_ADDRESS_SPECIAL_NEEDS'
      | 'TEST_TYPE'
      | 'TEST_SEQ_TYPE'
    Sort: {
      sort?: string[]
    }
    /** @description Describes the details of a reference code */
    ReferenceCode: {
      /**
       * Format: int64
       * @description An internally-generated unique identifier for this reference code.
       * @example 12345
       */
      referenceCodeId: number
      /**
       * @description The group name for related reference codes.
       * @example PHONE_TYPE
       */
      groupCode: components['schemas']['ReferenceCodeGroup']
      /**
       * @description The code for this reference data
       * @example MOB
       */
      code: string
      /**
       * @description A fuller description of the reference code
       * @example Mobile
       */
      description: string
      /**
       * Format: int32
       * @description The default order configured for the reference code, lowest number first.
       * @example 5
       */
      displayOrder: number
      /**
       * @description Whether the reference code is still in use. Old reference codes are maintained for compatability with legacy data.
       * @example true
       */
      isActive: boolean
    }
    /** @description Organisation search request query parameters */
    OrganisationSearchRequest: {
      /**
       * @description Full or partial name of the organisation
       * @example NHS
       */
      name: string
    }
    Pageable: {
      /** Format: int32 */
      page?: number
      /** Format: int32 */
      size?: number
      sort?: string[]
    }
    /** @description The high level details of an organisation, it's primary address and any business phone number associated with that address. */
    OrganisationSummary: {
      /**
       * Format: int64
       * @description The organisation id
       * @example 123456789
       */
      organisationId: number
      /**
       * @description The name of the organisation
       * @example Bob's Bakery
       */
      organisationName: string
      /**
       * @description Whether the organisation is currently active or not
       * @example true
       */
      organisationActive: boolean
      /**
       * @description Flat number in the address, if any
       * @example Flat 1
       */
      flat?: string
      /**
       * @description Property name or number, if any
       * @example 123
       */
      property?: string
      /**
       * @description Street name, if any
       * @example Baker Street
       */
      street?: string
      /**
       * @description Area or locality, if any
       * @example Marylebone
       */
      area?: string
      /**
       * @description City code, if any
       * @example 25343
       */
      cityCode?: string
      /**
       * @description The description of the city code, if any
       * @example Sheffield
       */
      cityDescription?: string
      /**
       * @description County code, if any
       * @example S.YORKSHIRE
       */
      countyCode?: string
      /**
       * @description The description of county code, if any
       * @example South Yorkshire
       */
      countyDescription?: string
      /**
       * @description Postal code, if any
       * @example NW1 6XE
       */
      postcode?: string
      /**
       * @description Country code, if any
       * @example ENG
       */
      countryCode?: string
      /**
       * @description The description of country code, if any
       * @example England
       */
      countryDescription?: string
      /**
       * @description The business phone number for the primary address, if any
       * @example 01234 56789
       */
      businessPhoneNumber?: string
      /**
       * @description The extension for the business phone number for the primary address, if any
       * @example 123
       */
      businessPhoneNumberExtension?: string
    }
    OrganisationSummaryResultItemPage: {
      content?: components['schemas']['OrganisationSummary'][]
      pageable?: components['schemas']['PageableObject']
      /** Format: int64 */
      total?: number
      last?: boolean
      /** Format: int64 */
      totalElements?: number
      /** Format: int32 */
      totalPages?: number
      first?: boolean
      /** Format: int32 */
      size?: number
      /** Format: int32 */
      number?: number
      sort?: components['schemas']['SortObject']
      /** Format: int32 */
      numberOfElements?: number
      empty?: boolean
    }
    PageableObject: {
      /** Format: int64 */
      offset?: number
      sort?: components['schemas']['SortObject']
      /** Format: int32 */
      pageSize?: number
      paged?: boolean
      /** Format: int32 */
      pageNumber?: number
      unpaged?: boolean
    }
    SortObject: {
      empty?: boolean
      sorted?: boolean
      unsorted?: boolean
    }
  }
  responses: never
  parameters: never
  requestBodies: never
  headers: never
  pathItems: never
}
export type $defs = Record<string, never>
export interface operations {
  createOrganisation: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['CreateOrganisationRequest']
      }
    }
    responses: {
      /** @description Created the organisation successfully */
      201: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['OrganisationDetails']
        }
      }
      /** @description The request has invalid or missing fields */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  migrateOrganisation: {
    parameters: {
      query?: never
      header?: never
      path?: never
      cookie?: never
    }
    requestBody: {
      content: {
        'application/json': components['schemas']['MigrateOrganisationRequest']
      }
    }
    responses: {
      /** @description The organisation and associated data was created successfully */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['MigrateOrganisationResponse']
        }
      }
      /** @description The request failed validation with invalid or missing data supplied */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getReferenceDataByGroup: {
    parameters: {
      query: {
        /** @description Sort configuration - default displayOrder, description */
        sort: components['schemas']['Sort']
        /** @description Whether to only return active codes or not, defaults to true */
        activeOnly?: boolean
      }
      header?: never
      path: {
        /**
         * @description The group code of the reference codes to load
         * @example PHONE_TYPE
         */
        groupCode: components['schemas']['ReferenceCodeGroup']
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description List of reference data codes/values */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ReferenceCode'][]
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
  getOrganisationById: {
    parameters: {
      query?: never
      header?: never
      path: {
        organisationId: number
      }
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Found the organisation */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['OrganisationDetails']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description No organisation with that id could be found */
      404: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['OrganisationDetails']
        }
      }
    }
  }
  searchOrganisations: {
    parameters: {
      query: {
        /** @description Search criteria */
        request: components['schemas']['OrganisationSearchRequest']
        /** @description Pageable configurations */
        pageable: components['schemas']['Pageable']
      }
      header?: never
      path?: never
      cookie?: never
    }
    requestBody?: never
    responses: {
      /** @description Organisations searched successfully. There may be no results. */
      200: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['OrganisationSummaryResultItemPage']
        }
      }
      /** @description Invalid request */
      400: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Unauthorised, requires a valid Oauth2 token */
      401: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
      /** @description Forbidden, requires an appropriate role */
      403: {
        headers: {
          [name: string]: unknown
        }
        content: {
          'application/json': components['schemas']['ErrorResponse']
        }
      }
    }
  }
}
